<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4f7ea95a-e045-47be-90d6-e5c4d7ef972c" activeEnvironment="Default" name="GetUsers" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="TestSuite 1"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="ec41ac1c-f254-4c78-ab88-1292c4011b16" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Users" path="/public-api/users" id="079898a1-1f94-4165-a12b-3d65f3a2c880"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Users 1" id="34097601-0ddf-4fb9-8f9f-1e03bbf3eeeb" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="https://gorest.co.in/public-api/users">user:Response</con:element></con:representation><con:request name="Request 1" id="c7e665c6-28e1-4144-a4d6-cc2e453c06d6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public-api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="7b3a1b2f-fe70-4feb-8f38-b4272a88529c" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="59fe9472-13bc-4b28-b1c3-a2c281f78346" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_001" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Users 1 - Request 1" id="bcfdb4d4-abc5-40a2-b0f0-6b5e2d199872"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public-api/users" methodName="Users 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Users 1 - Request 1" id="c7e665c6-28e1-4144-a4d6-cc2e453c06d6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public-api/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2bec25b2-cc54-46fb-b413-55e3126182f2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="${#TestCase#Accept}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log" id="cca184e6-8ebc-4171-b8bf-00ffd6504bbc"><con:settings/><con:config><script><![CDATA[import com.codoid.products.exception.FilloException;
import com.codoid.products.fillo.Connection;
import com.codoid.products.fillo.Fillo;
import com.codoid.products.fillo.Recordset;
import groovy.json.JsonSlurper;
import jxl.*;
import java.io.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

log.info("Base Path "+context.expand('${#TestSuite#TestData_BasePath}'))
Fillo fillo=new Fillo();
Connection connection=fillo.getConnection(context.expand('${#TestSuite#TestData_BasePath}'));
log.info("Test Case API Name"+ context.expand('${#TestCase#TestCase_API_Name}'))
Test_Case_Api_Name = context.expand('${#TestCase#TestCase_API_Name}')
String Log_flag  = null

  
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

API_Name = context.expand('${#TestSuite#TestData_Sheet_Name}')
TestCaseId = context.expand('${#TestCase#TestCase_ID}')

DateFormat dateFormat = new SimpleDateFormat(String.valueOf("yyyy_MM_dd"));
DateFormat TimeFormat = new SimpleDateFormat(String.valueOf("HH_mm_ss"));
Date date= new Date();
String Date_Value = dateFormat.format(date);
String Time_Value = TimeFormat.format(date);
log.info("Hello "+ Date_Value + " " + Time_Value);
int flag = 0
File Log_path = new File(projectDir+"\\..\\Results\\"+Date_Value+"\\"+API_Name+"\\"+TestCaseId)
log.info(Log_path)
if(!Log_path.isDirectory()){
      Log_path.mkdirs();
}



def count=testRunner.testCase.getTestStepCount();
log.info(count)


for(int i=0;i<count-2;i++)
{
String StepName = new String(testRunner.testCase.getTestStepAt(i).name)
String Enable= testRunner.testCase.getTestStepAt(i).isDisabled()
log.info("Steps_Enabled" + Enable)
log.info(StepName)


if((!StepName.equals("SmSession"))&&(Enable.equals("false"))&&(!StepName.equals("SID Transfer"))&&(!StepName.equals("Delay"))&&(!StepName.equals("Property Transfer"))&&(!StepName.equals("Properties"))&&(!StepName.equals("AuthCodeGenerator")))

{
def assertion = testRunner.testCase.getTestStepAt(i).getAssertionList()
def assertion_count = testRunner.testCase.getTestStepAt(i).getAssertionList().size()
for(int j = 0 ;j<assertion_count;j++){
	String Status=assertion[j].getStatus()
	log.info("Status"+Status)
	log.info(Status.equals("FAILED"))
	if(Status.equals("FAILED"))
	{
		flag = 0
		log.info("Fail"+flag)
		Log_flag = "Fail"
		
		break;	
	}else{
		flag = 1
		Log_flag = "Pass"
	}
}


}
if(Log_flag =="Fail"){
	break
}
}

String Log_file =Log_path.getPath() +"\\"+Log_flag+"_"+Test_Case_Api_Name+"_"+Time_Value+".txt"
def filename = new File (Log_file)


for(int i=0;i<count-2;i++)
{
									String Enable= testRunner.testCase.getTestStepAt(i).isDisabled()
									   String StepName = new String(testRunner.testCase.getTestStepAt(i).name)

									   if((!StepName.equals("SmSession"))&&(Enable.equals("false"))&&(!StepName.equals("SID Transfer"))&&(!StepName.equals("Delay"))&&(!StepName.equals("Property Transfer"))&&(!StepName.equals("Properties"))&&(!StepName.equals("AuthCodeGenerator")))

									{
									  filename.append("\r\n")
									   filename.append("\r\n")
									   filename.append("\r\n")
                                                filename.append("Step Name "+ StepName+"\r\n")
                                                log.info("Came Step start")
                                                filename.append("\r\n")
                                                filename.append("***********************Step Start****************\r\n")
                                                filename.append("***********************Request*******************\r\n")
                                                log.info("Came Request")
                                                String reqeust = new String(testRunner.testCase.getTestStepAt(i).testRequest.response.rawRequestData)
                                                filename.append(reqeust+"\r\n")
                                                log.info("Came Response")
                                                filename.append("***********************Response*******************\r\n")
                                                String response= new String(testRunner.testCase.getTestStepAt(i).testRequest.response.rawResponseData)
                                                filename.append(response+"\r\n")
                                                log.info("Came End")
                                                filename.append("***********************Step End*******************\r\n")
                                                log.info("about t close")
                                                //filename.close()
                                                log.info("Closed")  


									}

}





if(flag == 1){
	ApplicationId= context.expand('${#TestCase#ApplicationId}')
	log.info(ApplicationId)
	log.info("TestCaseStatus :Passed")
	//Field_Error = context.expand('${#TestCase#loginUrl}')
	
	 context.testCase.setPropertyValue("TestCase_Status","Passed")
             StatusQuery="Update "+context.expand('${#TestSuite#TestData_Sheet_Name}')+" Set API_Execution_Status ='Passed',API_Log_Path ='"+Log_file+"', Application_ID = '"+ApplicationId+"'where TestCase_API_Name='"+context.expand('${#TestCase#TestCase_API_Name}')+"'";   
}
else
{
	log.info("TestCaseStatus: Failed")
	ApplicationId= context.expand('${#TestCase#ApplicationId}')
	
	
	 context.testCase.setPropertyValue("TestCase_Status","Failed")
	log.info(ApplicationId)
	//Field_Error = context.expand('${#TestCase#loginUrl}')
	
     StatusQuery="Update "+context.expand('${#TestSuite#TestData_Sheet_Name}')+" Set API_Execution_Status ='Failed',API_Log_Path ='"+Log_file+"', Application_ID = '"+ApplicationId+"'where TestCase_API_Name='"+context.expand('${#TestCase#TestCase_API_Name}')+"'";   
}



log.info(StatusQuery)

//connection.executeUpdate(StatusQuery);
connection.close();


	

//log.info(responseContent)
/*for(int i=0;i<1;i++)
{

		String StepName = new String(testRunner.testCase.getTestStepAt(0).name)
 //String responseContent = new String(testRunner.testCase.getTestStepAt(0).testRequest.response.rawRequestData)
        //       String Stat = res[j].status
                                           //     log.info("Came "+Stat)
                                                filename.append("Step Name "+ StepName+"\r\n")
                                                log.info("Came Step start")
                                                filename.append("\r\n")
                                                filename.append("***********************Step Start****************\r\n")
                                                filename.append("***********************Request*******************\r\n")
                                                log.info("Came Request")
                                                String reqeust = new String(testRunner.testCase.getTestStepAt(i).testRequest.response.rawRequestData)
                                                filename.append(reqeust+"\r\n")
                                                log.info("Came Response")
                                                filename.append("***********************Response*******************\r\n")
                                                String response= new String(testRunner.testCase.getTestStepAt(i).testRequest.response.rawResponseData)
                                                filename.append(response+"\r\n")
                                                log.info("Came End")
                                                filename.append("***********************Step End*******************\r\n")
                                                log.info("about t close")
                                                //filename.close()
                                                log.info("Closed")  
	
	} */]]></script></con:config></con:testStep><con:testStep type="groovy" name="Loop Data" id="0aa5bc27-6444-4038-a615-6d0e180d24bf"><con:settings/><con:config><script>import jxl.*;
import java.io.*;

try{
                
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath   
log.info(projectDir)                     
def testData_file = projectDir+"\\RetrieveRiskProfileDetail.xls";
//def testData_file = testRunner.testCase.testSuite.getPropertyValue("TestData_BasePath")
Workbook wrkbk_TD = Workbook.getWorkbook(new File(testData_file))
Sheet sheet_TD = wrkbk_TD.getSheet(context.expand('${#TestSuite#TestData_Sheet_Name}'))

int row_Count_Used_TD = sheet_TD.getRows()
log.info(row_Count_Used_TD)
int col_Count_Used_TD = sheet_TD.getColumns()
def current_row = testRunner.testCase.getPropertyValue("current_row")
log.info(current_row)
if(Integer.parseInt(current_row)&lt;row_Count_Used_TD){
                for(int i = Integer.parseInt(current_row) ; i&lt;row_Count_Used_TD; i++){
                                if( sheet_TD.getCell(1,Integer.parseInt(current_row)).getContents() == "1"){
                                	log.info("Sample")
                                         //       log.info(sheet_TD.getCell(2,Integer.parseInt(current_row)).getContents())
                                               /* String TestCase_Name = sheet_TD.getCell(3,Integer.parseInt(current_row)).getContents()
                                                def testSteps = testRunner.testCase.getTestStepList()
                                            //    testRunner.testCase.setName(APIName)
                                                testSteps.each{
                                                                              String name="";
                                                                String name1 = it.name
                                                                if(name1.startsWith("TC_"))
                                                               {
                                                               name=name1.substring(10)
                                                                                 it.setName(TestCase_Name+"_"+name)
                                                               }
                                                               else
                                                               {
                                                               it.setName(TestCase_Name+"_"+name1)
                                                }} */
                                              String APIName = sheet_TD.getCell(3,Integer.parseInt(current_row)).getContents()
                                                                                                                                //            APIName=APIName.substring(0,14);
                                                                                                                                  testRunner.testCase.setName(APIName)
                                                                                                                                  log.info(APIName)
                                                for( int j = 2;j&lt;col_Count_Used_TD;j++){
                                                                String data_Header = sheet_TD.getCell(j,0).getContents()           
                                                                String data = sheet_TD.getCell(j,Integer.parseInt(current_row)).getContents()
                                                                //log.info(data_Header+" "+ data+" "+j +" " +col_Count_Used_TD)
                                                                testRunner.testCase.setPropertyValue(data_Header, data)
                                                }
                                                int count = Integer.parseInt(current_row)+1
                                                testRunner.testCase.setPropertyValue("current_row",count.toString())
                                                testRunner.gotoStep(0)
                                                break;
                                }
                                current_row = String.valueOf(Integer.parseInt(current_row) +1)
                                testRunner.testCase.setPropertyValue("current_row","1")
                }

                
}
else{
log.info("Data is finished")
} 

}
catch(Exception e){
log.info("Exception in the loop Data" +e)
}


</script></con:config></con:testStep><con:properties><con:property><con:name>current_row</con:name><con:value>2</con:value></con:property><con:property><con:name>TestCase_API_Name</con:name><con:value>TC_001-To verify the RetrieveRiskProfileDetails API with all mandatory fields</con:value></con:property><con:property><con:name>TestCase_ID</con:name><con:value>TC_001</con:value></con:property><con:property><con:name>Case_Status</con:name><con:value>Positive_Flow</con:value></con:property><con:property><con:name>API_Execution_Status</con:name><con:value/></con:property><con:property><con:name>Application_ID</con:name><con:value/></con:property><con:property><con:name>moreInfo</con:name><con:value/></con:property><con:property><con:name>Field_Error</con:name><con:value/></con:property><con:property><con:name>API_Log_Path</con:name><con:value/></con:property><con:property><con:name>TestCase_Status</con:name><con:value/></con:property><con:property><con:name>received</con:name><con:value/></con:property><con:property><con:name>Expected_Status_Code</con:name><con:value>200</con:value></con:property><con:property><con:name>Error_type</con:name><con:value/></con:property><con:property><con:name>Error_code</con:name><con:value/></con:property><con:property><con:name>Error_Details</con:name><con:value/></con:property><con:property><con:name>retrieve_Payload</con:name><con:value>{
 "relationshipNumber":"106415",
 "customerType":"IND",
 "customerSegment":"G",
 "currencyCode":"344",
 "operationLevel":"R"
}


</con:value></con:property><con:property><con:name>Accept</con:name><con:value>application/json</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>TestData_BasePath</con:name><con:value>F:\Learnings\soap\RetrieveRiskProfileDetail.xls</con:value></con:property><con:property><con:name>TestData_Sheet_Name</con:name><con:value>Test</con:value></con:property></con:properties></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>